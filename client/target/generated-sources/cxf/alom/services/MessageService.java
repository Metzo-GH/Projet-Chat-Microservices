package alom.services;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 4.1.0
 * 2024-12-22T19:11:21.647+01:00
 * Generated source version: 4.1.0
 *
 */
@WebService(targetNamespace = "http://services.alom/", name = "MessageService")
@XmlSeeAlso({ObjectFactory.class})
public interface MessageService {

    @WebMethod
    @RequestWrapper(localName = "sendPrivateMessage", targetNamespace = "http://services.alom/", className = "alom.services.SendPrivateMessage")
    @ResponseWrapper(localName = "sendPrivateMessageResponse", targetNamespace = "http://services.alom/", className = "alom.services.SendPrivateMessageResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String sendPrivateMessage(

        @WebParam(name = "token", targetNamespace = "http://services.alom/")
        java.lang.String token,
        @WebParam(name = "recipient", targetNamespace = "http://services.alom/")
        java.lang.String recipient,
        @WebParam(name = "message", targetNamespace = "http://services.alom/")
        java.lang.String message
    );

    @WebMethod
    @RequestWrapper(localName = "sendChannelMessage", targetNamespace = "http://services.alom/", className = "alom.services.SendChannelMessage")
    @ResponseWrapper(localName = "sendChannelMessageResponse", targetNamespace = "http://services.alom/", className = "alom.services.SendChannelMessageResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String sendChannelMessage(

        @WebParam(name = "token", targetNamespace = "http://services.alom/")
        java.lang.String token,
        @WebParam(name = "channel", targetNamespace = "http://services.alom/")
        java.lang.String channel,
        @WebParam(name = "message", targetNamespace = "http://services.alom/")
        java.lang.String message
    );

    @WebMethod
    @RequestWrapper(localName = "joinChannel", targetNamespace = "http://services.alom/", className = "alom.services.JoinChannel")
    @ResponseWrapper(localName = "joinChannelResponse", targetNamespace = "http://services.alom/", className = "alom.services.JoinChannelResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String joinChannel(

        @WebParam(name = "token", targetNamespace = "http://services.alom/")
        java.lang.String token,
        @WebParam(name = "channel", targetNamespace = "http://services.alom/")
        java.lang.String channel
    );

    @WebMethod
    @RequestWrapper(localName = "leaveChannel", targetNamespace = "http://services.alom/", className = "alom.services.LeaveChannel")
    @ResponseWrapper(localName = "leaveChannelResponse", targetNamespace = "http://services.alom/", className = "alom.services.LeaveChannelResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String leaveChannel(

        @WebParam(name = "token", targetNamespace = "http://services.alom/")
        java.lang.String token,
        @WebParam(name = "channel", targetNamespace = "http://services.alom/")
        java.lang.String channel
    );

    @WebMethod
    @RequestWrapper(localName = "login", targetNamespace = "http://services.alom/", className = "alom.services.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://services.alom/", className = "alom.services.LoginResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String login(

        @WebParam(name = "nickname", targetNamespace = "http://services.alom/")
        java.lang.String nickname,
        @WebParam(name = "password", targetNamespace = "http://services.alom/")
        java.lang.String password
    );

    @WebMethod
    @RequestWrapper(localName = "register", targetNamespace = "http://services.alom/", className = "alom.services.Register")
    @ResponseWrapper(localName = "registerResponse", targetNamespace = "http://services.alom/", className = "alom.services.RegisterResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String register(

        @WebParam(name = "nickname", targetNamespace = "http://services.alom/")
        java.lang.String nickname,
        @WebParam(name = "password", targetNamespace = "http://services.alom/")
        java.lang.String password
    );

    @WebMethod
    @RequestWrapper(localName = "validateToken", targetNamespace = "http://services.alom/", className = "alom.services.ValidateToken")
    @ResponseWrapper(localName = "validateTokenResponse", targetNamespace = "http://services.alom/", className = "alom.services.ValidateTokenResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.lang.String validateToken(

        @WebParam(name = "token", targetNamespace = "http://services.alom/")
        java.lang.String token
    );
}
